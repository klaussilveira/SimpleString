<?xml version="1.0"?>
<project version="0.12.0" title="">
  <file path="SimpleString.class.php" hash="cd64b38fa4fa5791408c8db76748094f">
    <docblock>
      <description>SimpleString</description>
      <long-description>&lt;p&gt;A small library for string manipulation with PHP.&lt;/p&gt;

&lt;p&gt;SimpleString uses method overloading to create an object-oriented
interface for the built-in string functions in PHP. It implements a
fluent interface, improving how we manipulate strings, and extends
functionality by providing common implementations. It also aims to
eliminate the problems of unorganized function names.&lt;/p&gt;
</long-description>
      <tag name="author" description="Klaus Silveira &amp;lt;contact@klaussilveira.com&amp;gt;"/>
      <tag name="package" description="simplestring"/>
      <tag name="license" description="http://www.opensource.org/licenses/bsd-license.php BSD License"/>
      <tag name="version" description="0.1"/>
    </docblock>
    <class final="false" abstract="false" line="18" namespace="default">
      <name>SimpleString</name>
      <extends/>
      <full_name>\SimpleString</full_name>
      <docblock>
        <description>SimpleString</description>
        <long-description>&lt;p&gt;A small library for string manipulation with PHP.&lt;/p&gt;

&lt;p&gt;SimpleString uses method overloading to create an object-oriented
interface for the built-in string functions in PHP. It implements a
fluent interface, improving how we manipulate strings, and extends
functionality by providing common implementations. It also aims to
eliminate the problems of unorganized function names.&lt;/p&gt;
</long-description>
        <tag name="author" description="Klaus Silveira &amp;lt;contact@klaussilveira.com&amp;gt;" line="2"/>
        <tag name="package" description="simplestring" line="2"/>
        <tag name="license" description="http://www.opensource.org/licenses/bsd-license.php BSD License" line="2"/>
        <tag name="version" description="0.1" line="2"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="25">
        <name>$string</name>
        <default/>
        <docblock>
          <description>String value that we'll be manipulating</description>
          <long-description>
</long-description>
          <tag name="var" description="" type="string" line="20">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="33">
        <name>__construct</name>
        <docblock>
          <description>Object instantiation and encapsulation of the string value</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="27"/>
          <tag name="param" description="String value that will be manipulated" type="string" variable="$string" line="27">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="45">
        <name>__call</name>
        <docblock>
          <description>Overloading in order to create an object-oriented interface for
built-in PHP string functions.</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="37"/>
          <tag name="param" description="Name of the method being called" type="string" variable="$name" line="37">
            <type by_reference="false">string</type>
          </tag>
          <tag name="param" description="Arguments being passed to the method" type="array" variable="$arguments" line="37">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$arguments</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="113">
        <name>append</name>
        <docblock>
          <description>Inserts a string at the end of another string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="107"/>
          <tag name="param" description="String to be appended" type="string" variable="$string" line="107">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="125">
        <name>prepend</name>
        <docblock>
          <description>Inserts a string at the beginning of another string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="119"/>
          <tag name="param" description="String to be prepended" type="string" variable="$string" line="119">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="136">
        <name>chop</name>
        <docblock>
          <description>Removes the last character from a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="131"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="149">
        <name>shorten</name>
        <docblock>
          <description>Shortens a string to a fixed limit</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="142"/>
          <tag name="param" description="Limit of characters" type="int" variable="$limit" line="142">
            <type by_reference="false">int</type>
          </tag>
          <tag name="param" description="(optional) Round to the last word and don&amp;#039;t cut words" type="boolean" variable="$round" line="142">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$limit</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$round</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="167">
        <name>reverse</name>
        <docblock>
          <description>Reverses a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="162"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="180">
        <name>scramble</name>
        <docblock>
          <description>Scrambles all words in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="175"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="197">
        <name>shuffle</name>
        <docblock>
          <description>Shuffles all characters in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="192"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="209">
        <name>seo</name>
        <docblock>
          <description>Cleans and optimizes the string to be search engine friendly (SEO)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="203"/>
          <tag name="param" description="(optional) Character that separates words" type="string" variable="$separator" line="203">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$separator</name>
          <default>-</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="228">
        <name>emphasize</name>
        <docblock>
          <description>Emphasizes certain words or characters in a string using an HTML tag</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="221"/>
          <tag name="param" description="Words or characters to be emphasized" type="string|array" variable="$targets" line="221">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag name="param" description="HTML tag that will be used for emphasis (e.g: strong, em)" type="string" variable="$rule" line="221">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$targets</name>
          <default/>
          <type/>
        </argument>
        <argument line="228">
          <name>$rule</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="246">
        <name>censor</name>
        <docblock>
          <description>Censors certain words or characters in a string and replaces them with a *</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="240"/>
          <tag name="param" description="Words or characters to be censored" type="string|array" variable="$words" line="240">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$words</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="266">
        <name>toLowerCase</name>
        <docblock>
          <description>Converts the string to lowercase (e.g: lorem ipsum dolor)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="261"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="277">
        <name>toUpperCase</name>
        <docblock>
          <description>Converts the string to uppercase (e.g: LOREM IPSUM DOLOR)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="272"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="288">
        <name>toSentenceCase</name>
        <docblock>
          <description>Converts the string to sentence case (e.g: Lorem ipsum dolor)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="283"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="300">
        <name>toTitleCase</name>
        <docblock>
          <description>Converts the string to title case (e.g: Lorem Ipsum Dolor)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="295"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="312">
        <name>toUnderscores</name>
        <docblock>
          <description>Converts the spaces in string to underscores and lowercases the string (e.g: lorem_ipsum_dolor)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="307"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="324">
        <name>toCamelCase</name>
        <docblock>
          <description>Converts the string to camel case (e.g: loremIpsumDolor)</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="319"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="337">
        <name>removeNonAlpha</name>
        <docblock>
          <description>Removes all non-alpha characters in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="332"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="348">
        <name>removeNonAlphanumeric</name>
        <docblock>
          <description>Removes all non-alphanumeric characters in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="343"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="359">
        <name>removeNonNumeric</name>
        <docblock>
          <description>Removes all non-numeric characters in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="354"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="370">
        <name>removeDuplicates</name>
        <docblock>
          <description>Removes all duplicate words in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="365"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="383">
        <name>removeDelimiters</name>
        <docblock>
          <description>Removes all delimiters in a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="378"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="404">
        <name>intersect</name>
        <docblock>
          <description>Gives the intersection of two strings</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="398"/>
          <tag name="param" description="String to be intersected" type="string" variable="$words" line="398">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="404">
          <name>$words</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="419">
        <name>length</name>
        <docblock>
          <description>Returns the length of a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="413"/>
          <tag name="return" description="String length" type="int" line="413">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="429">
        <name>words</name>
        <docblock>
          <description>Returns the number of words of a string</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="423"/>
          <tag name="return" description="Word count" type="int" line="423">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="440">
        <name>contains</name>
        <docblock>
          <description>Checks if a string contains another one</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="433"/>
          <tag name="param" description="String to be checked" type="string" variable="$string" line="433">
            <type by_reference="false">string</type>
          </tag>
          <tag name="return" description="False if it does not contain, true if it does" type="boolean" line="433">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="440">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="451">
        <name>__toString</name>
        <docblock>
          <description>Returns our manipulated string when the object is echoed</description>
          <long-description>
</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="demo.php" hash="0537377d429eb730af27d86d0d746dba">
    <include type="Require" line="3">
      <name>SimpleString.class.php</name>
    </include>
  </file>
  <file path="tests/SimpleStringTest.php" hash="528a682bf1ff31590f3d5ff3b6cf866f">
    <docblock>
      <description>SimpleStringTest</description>
      <long-description>&lt;p&gt;Implementation of a SimpleString test case using PHPUnit&lt;/p&gt;
</long-description>
      <tag name="author" description="Thiago Lechuga &amp;lt;thiagoalz@gmail.com&amp;gt;"/>
      <tag name="package" description="simplestring"/>
      <tag name="license" description="http://www.opensource.org/licenses/bsd-license.php BSD License"/>
      <tag name="version" description="0.1"/>
      <tag name="todo" description="Using one function for each test case is evil, need to fix this"/>
    </docblock>
    <include type="Require Once" line="3">
      <name>SimpleString.class.php</name>
    </include>
    <class final="false" abstract="false" line="16" namespace="default">
      <name>SimpleStringTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\SimpleStringTest</full_name>
      <docblock>
        <description>SimpleStringTest</description>
        <long-description>&lt;p&gt;Implementation of a SimpleString test case using PHPUnit&lt;/p&gt;
</long-description>
        <tag name="author" description="Thiago Lechuga &amp;lt;thiagoalz@gmail.com&amp;gt;" line="5"/>
        <tag name="package" description="simplestring" line="5"/>
        <tag name="license" description="http://www.opensource.org/licenses/bsd-license.php BSD License" line="5"/>
        <tag name="version" description="0.1" line="5"/>
        <tag name="todo" description="Using one function for each test case is evil, need to fix this" line="5"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="22">
        <name>testDemo</name>
        <docblock>
          <description>Testing the code of demo.php</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="17"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="50">
        <name>testCreatedMethods</name>
        <docblock>
          <description>Testing custom methods</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="43"/>
          <tag name="todo" description="Cover more custom methods" line="43"/>
          <tag name="todo" description="Maybe break the whole thing with more tests?" line="43"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="102">
        <name>testCreatedMethodsChain</name>
        <docblock>
          <description>Testing custom methods using the fluent interface</description>
          <long-description>
</long-description>
          <tag name="access" description="public" line="97"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="116">
        <name>testOverloadsWithCall_Regular</name>
        <docblock>
          <description>Testing regular method calls</description>
          <long-description>&lt;p&gt;Testing overloaded methods using __call. This test case covers
regular methods.&lt;/p&gt;
</long-description>
          <tag name="access" description="public" line="108"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="141">
        <name>testOverloadsWithCall_Different</name>
        <docblock>
          <description>Testing "different" method calls</description>
          <long-description>&lt;p&gt;Testing overloaded methods using __call. This test case covers
methods that have a different parameter order.&lt;/p&gt;
</long-description>
          <tag name="access" description="public" line="133"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="167">
        <name>testOverloadsWithCall_Invalid</name>
        <docblock>
          <description>Testing calls to methods that don't exist</description>
          <long-description>&lt;p&gt;Testing overloaded methods using __call. This test case covers
methods that don't exist.&lt;/p&gt;
</long-description>
          <tag name="access" description="public" line="158"/>
          <tag name="expectedException" description="BadMethodCallException" line="158"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="181">
        <name>testOverloadsWithCall_Explode</name>
        <docblock>
          <description>Testing invalid method calls</description>
          <long-description>&lt;p&gt;Testing overloaded methods using __call. This test case covers
methods that don't return strings, therefore are invalid.&lt;/p&gt;
</long-description>
          <tag name="access" description="public" line="172"/>
          <tag name="expectedException" description="BadMethodCallException" line="172"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="195">
        <name>testOverloadsWithCall_Split</name>
        <docblock>
          <description>Testing invalid method calls</description>
          <long-description>&lt;p&gt;Testing overloaded methods using __call. This test case covers
methods that don't return strings, therefore are invalid.&lt;/p&gt;
</long-description>
          <tag name="access" description="public" line="186"/>
          <tag name="expectedException" description="BadMethodCallException" line="186"/>
        </docblock>
      </method>
    </class>
  </file>
  <package name=""/>
  <package name="simplestring"/>
  <namespace name="default"/>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
